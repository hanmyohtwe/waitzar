import os
import sys
import re

#Import the path from the user's environment
env = Environment(ENV = {'PATH' : os.environ['PATH']})

#Attempt to fix the path if the user is on windows and the path
# doesn't contain kernel32.lib
extra_libs = []
if env['PLATFORM'] == 'win32':
   extra_libs = ['C:\\Program Files\\Microsoft SDKs\\Windows\\v6.0A\\Lib']
   env['ENV']['TMP'] = os.environ['TMP'] 
   
#Prevent Windows users from messing up their directory structure; hide the "install" alias from them.
if env['PLATFORM'] != 'win32':
   env.Alias('install', '/usr')


#Sources
sources = Split("""
   fontconv.cpp
   fontmap.cpp
   lib.cpp
   regex.cpp
   WordBuilder.cpp
   SentenceList.cpp
   """)
sources = map(lambda x:os.path.join("waitzar",x), sources)
headers = map(lambda x:re.sub("[.]cpp$", ".h", x), sources)

#Data
model_data = Split('data/model2/Myanmar.model data/model2/mywords.txt')

#Build the static library
wz_static = env.StaticLibrary('waitzar', sources, LIBPATH = extra_libs)

#Build the shared library
wz_shared = env.SharedLibrary('waitzar', sources, LIBPATH = extra_libs)

#Install the static library
#     libwaitzar.so
#     libwaitzar.la
env.Install('/usr/lib', [wz_shared, wz_static])

#Install the shared library
env.InstallAs(['/usr/lib/libwaitzar.so.1', '/usr/lib/libwaitzar.so.1.0.0'], [wz_shared, wz_shared])

#Install header files
env.Install('/usr/include/waitzar', headers)

#Install our shared library data
env.Install('/usr/share/waitzar/model2', model_data)

#Installation of the pkgconfig file
env.Install('/usr/lib/pkgconfig/', 'waitzar.pc')





